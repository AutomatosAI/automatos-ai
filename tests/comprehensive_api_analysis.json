{
  "timestamp": "2025-07-30T13:06:06.890998",
  "base_url": "http://localhost:8001",
  "total_endpoints_discovered": 46,
  "successful_tests": 22,
  "failed_tests": 24,
  "endpoint_results": {
    "POST /api/agents/": {
      "method": "POST",
      "url": "http://localhost:8001/api/agents/",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "enum",
            "loc": [
              "body",
              "agent_type"
            ],
            "msg": "Input should be 'code_architect', 'security_expert', 'performance_optimizer', 'data_analyst', 'infrastructure_manager', 'custom', 'system' or 'specialized'",
            "input": "specialist",
            "ctx": {
              "expected": "'code_architect', 'security_expert', 'performance_optimizer', 'data_analyst', 'infrastructure_manager', 'custom', 'system' or 'specialized'"
            }
          }
        ]
      },
      "duration": 0.1015634536743164,
      "error": null
    },
    "GET /api/agents/": {
      "method": "GET",
      "url": "http://localhost:8001/api/agents/",
      "success": true,
      "status_code": 200,
      "response": [
        {
          "id": 2,
          "name": "Security Expert",
          "description": "Security analysis and vulnerability assessment",
          "agent_type": "security_expert",
          "status": "active",
          "configuration": {
            "scan_level": "high"
          },
          "performance_metrics": null,
          "created_at": "2025-07-30T11:40:41.734747",
          "updated_at": "2025-07-30T11:40:41.734747",
          "created_by": "system",
          "skills": []
        },
        {
          "id": 4,
          "name": "Test Agent Created",
          "description": "A test agent created via API",
          "agent_type": "code_architect",
          "status": "active",
          "configuration": {
            "test_mode": true
          },
          "performance_metrics": null,
          "created_at": "2025-07-30T11:54:49.448991",
          "updated_at": "2025-07-30T11:54:49.448991",
          "created_by": "system",
          "skills": []
        },
        {
          "id": 1,
          "name": "Test Agent 1",
          "description": "A test agent for API testing",
          "agent_type": "custom",
          "status": "active",
          "configuration": {
            "test": true
          },
          "performance_metrics": null,
          "created_at": "2025-07-30T11:40:41.734747",
          "updated_at": "2025-07-30T11:40:41.734747",
          "created_by": "system",
          "skills": []
        },
        {
          "id": 3,
          "name": "Performance Optimizer",
          "description": "Code and system performance optimization",
          "agent_type": "performance_optimizer",
          "status": "active",
          "configuration": {
            "optimization_level": "aggressive"
          },
          "performance_metrics": null,
          "created_at": "2025-07-30T11:40:41.734747",
          "updated_at": "2025-07-30T11:40:41.734747",
          "created_by": "system",
          "skills": []
        }
      ],
      "duration": 0.12162089347839355,
      "error": null
    },
    "GET /api/agents/{agent_id}": {
      "method": "GET",
      "url": "http://localhost:8001/api/agents/{agent_id}",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "agent_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "{agent_id}",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.10026955604553223,
      "error": null
    },
    "PUT /api/agents/{agent_id}": {
      "method": "PUT",
      "url": "http://localhost:8001/api/agents/{agent_id}",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "agent_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "{agent_id}",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.0997626781463623,
      "error": null
    },
    "DELETE /api/agents/{agent_id}": {
      "method": "DELETE",
      "url": "http://localhost:8001/api/agents/{agent_id}",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "agent_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "{agent_id}",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.10821104049682617,
      "error": null
    },
    "GET /api/agents/types": {
      "method": "GET",
      "url": "http://localhost:8001/api/agents/types",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "agent_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "types",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.11931395530700684,
      "error": null
    },
    "POST /api/agents/{agent_id}/execute": {
      "method": "POST",
      "url": "http://localhost:8001/api/agents/{agent_id}/execute",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "agent_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "{agent_id}",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.10076427459716797,
      "error": null
    },
    "GET /api/agents/{agent_id}/status": {
      "method": "GET",
      "url": "http://localhost:8001/api/agents/{agent_id}/status",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "agent_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "{agent_id}",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.10160064697265625,
      "error": null
    },
    "POST /api/agents/{agent_id}/validate-task": {
      "method": "POST",
      "url": "http://localhost:8001/api/agents/{agent_id}/validate-task",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "agent_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "{agent_id}",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.09746527671813965,
      "error": null
    },
    "GET /api/agents/professional-skills": {
      "method": "GET",
      "url": "http://localhost:8001/api/agents/professional-skills",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "agent_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "professional-skills",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.09878373146057129,
      "error": null
    },
    "POST /api/agents/skills": {
      "method": "POST",
      "url": "http://localhost:8001/api/agents/skills",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "missing",
            "loc": [
              "body",
              "skill_type"
            ],
            "msg": "Field required",
            "input": {
              "name": "Test Context Engineering Agent",
              "description": "Agent specialized in context engineering and retrieval",
              "agent_type": "specialist",
              "configuration": {
                "model": "gpt-4",
                "temperature": 0.7,
                "max_tokens": 2000,
                "specialization": "context_engineering",
                "capabilities": [
                  "document_analysis",
                  "context_retrieval",
                  "knowledge_synthesis"
                ]
              }
            },
            "url": "https://errors.pydantic.dev/2.5/v/missing"
          }
        ]
      },
      "duration": 0.10120105743408203,
      "error": null
    },
    "GET /api/agents/skills": {
      "method": "GET",
      "url": "http://localhost:8001/api/agents/skills",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "agent_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "skills",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.13857078552246094,
      "error": null
    },
    "GET /api/agents/skills/{skill_id}": {
      "method": "GET",
      "url": "http://localhost:8001/api/agents/skills/{skill_id}",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "skill_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "{skill_id}",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.1000518798828125,
      "error": null
    },
    "PUT /api/agents/skills/{skill_id}": {
      "method": "PUT",
      "url": "http://localhost:8001/api/agents/skills/{skill_id}",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "skill_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "{skill_id}",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.10133218765258789,
      "error": null
    },
    "POST /api/agents/patterns": {
      "method": "POST",
      "url": "http://localhost:8001/api/agents/patterns",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "missing",
            "loc": [
              "body",
              "pattern_type"
            ],
            "msg": "Field required",
            "input": {
              "name": "Test Context Engineering Agent",
              "description": "Agent specialized in context engineering and retrieval",
              "agent_type": "specialist",
              "configuration": {
                "model": "gpt-4",
                "temperature": 0.7,
                "max_tokens": 2000,
                "specialization": "context_engineering",
                "capabilities": [
                  "document_analysis",
                  "context_retrieval",
                  "knowledge_synthesis"
                ]
              }
            },
            "url": "https://errors.pydantic.dev/2.5/v/missing"
          },
          {
            "type": "missing",
            "loc": [
              "body",
              "pattern_data"
            ],
            "msg": "Field required",
            "input": {
              "name": "Test Context Engineering Agent",
              "description": "Agent specialized in context engineering and retrieval",
              "agent_type": "specialist",
              "configuration": {
                "model": "gpt-4",
                "temperature": 0.7,
                "max_tokens": 2000,
                "specialization": "context_engineering",
                "capabilities": [
                  "document_analysis",
                  "context_retrieval",
                  "knowledge_synthesis"
                ]
              }
            },
            "url": "https://errors.pydantic.dev/2.5/v/missing"
          }
        ]
      },
      "duration": 0.09805798530578613,
      "error": null
    },
    "GET /api/agents/patterns": {
      "method": "GET",
      "url": "http://localhost:8001/api/agents/patterns",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "agent_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "patterns",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.10175299644470215,
      "error": null
    },
    "GET /api/workflows/active": {
      "method": "GET",
      "url": "http://localhost:8001/api/workflows/active",
      "success": true,
      "status_code": 200,
      "response": {
        "active_workflows": [
          {
            "id": 2,
            "name": "Security Audit Flow",
            "description": "Security analysis and vulnerability scanning workflow",
            "status": "active",
            "agents": [],
            "current_execution": {
              "id": null,
              "status": "idle",
              "progress": 0,
              "current_step": "Idle",
              "started_at": null,
              "estimated_completion": null
            },
            "metrics": {
              "total_executions": 0,
              "successful_executions": 0,
              "success_rate": 0.0,
              "avg_duration": "4.2m",
              "last_execution": null
            },
            "recent_executions": [],
            "created_at": "2025-07-30T11:40:50.619920",
            "updated_at": "2025-07-30T11:40:50.619920"
          },
          {
            "id": 3,
            "name": "Performance Test Flow",
            "description": "Performance optimization and testing workflow",
            "status": "active",
            "agents": [],
            "current_execution": {
              "id": null,
              "status": "idle",
              "progress": 0,
              "current_step": "Idle",
              "started_at": null,
              "estimated_completion": null
            },
            "metrics": {
              "total_executions": 0,
              "successful_executions": 0,
              "success_rate": 0.0,
              "avg_duration": "4.2m",
              "last_execution": null
            },
            "recent_executions": [],
            "created_at": "2025-07-30T11:40:50.619920",
            "updated_at": "2025-07-30T11:40:50.619920"
          }
        ],
        "total_active": 2,
        "system_load": 30,
        "last_updated": "2025-07-30T13:06:09.054106"
      },
      "duration": 0.1728203296661377,
      "error": null
    },
    "GET /api/workflows/stats/dashboard": {
      "method": "GET",
      "url": "http://localhost:8001/api/workflows/stats/dashboard",
      "success": true,
      "status_code": 200,
      "response": {
        "overview": {
          "total_workflows": 3,
          "active_workflows": 2,
          "draft_workflows": 1,
          "archived_workflows": 0,
          "total_executions": 0,
          "running_executions": 0
        },
        "today_stats": {
          "executions": 0,
          "completed": 0,
          "failed": 0,
          "success_rate": 0.0
        },
        "performance": {
          "overall_success_rate": 0.0,
          "avg_execution_time": "4.2m",
          "agent_utilization": 100.0,
          "system_efficiency": 50.0
        },
        "workflow_types": [
          {
            "type": "General",
            "count": 3,
            "percentage": 100.0
          }
        ],
        "execution_trends": [],
        "recent_activity": [],
        "last_updated": "2025-07-30T13:06:09.230007"
      },
      "duration": 0.17450690269470215,
      "error": null
    },
    "GET /api/workflows/{workflow_id}/live-progress": {
      "method": "GET",
      "url": "http://localhost:8001/api/workflows/{workflow_id}/live-progress",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "workflow_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "{workflow_id}",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.12049484252929688,
      "error": null
    },
    "POST /api/workflows/{workflow_id}/execute-advanced": {
      "method": "POST",
      "url": "http://localhost:8001/api/workflows/{workflow_id}/execute-advanced",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "workflow_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "{workflow_id}",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.10826802253723145,
      "error": null
    },
    "GET /api/workflows/templates/recommended": {
      "method": "GET",
      "url": "http://localhost:8001/api/workflows/templates/recommended",
      "success": true,
      "status_code": 200,
      "response": {
        "recommended_templates": [
          {
            "id": "ai-code-review",
            "name": "AI-Powered Code Review",
            "description": "Comprehensive code review with security analysis and best practices",
            "category": "Development",
            "difficulty": "intermediate",
            "estimated_time": "5-10 minutes",
            "recommended_agents": [
              "code_architect",
              "security_expert"
            ],
            "steps": [
              "Code Analysis",
              "Security Scan",
              "Performance Review",
              "Best Practices Check",
              "Documentation Review",
              "Report Generation"
            ],
            "use_cases": [
              "Pull Request Review",
              "Code Quality Audit",
              "Security Assessment"
            ],
            "popularity": 85,
            "success_rate": 94
          },
          {
            "id": "infrastructure-monitoring",
            "name": "Infrastructure Health Check",
            "description": "Monitor and analyze infrastructure performance and health",
            "category": "Infrastructure",
            "difficulty": "beginner",
            "estimated_time": "5-15 minutes",
            "recommended_agents": [
              "infrastructure_manager",
              "performance_optimizer"
            ],
            "steps": [
              "System Metrics Collection",
              "Performance Analysis",
              "Resource Utilization",
              "Alert Configuration",
              "Health Report"
            ],
            "use_cases": [
              "System Monitoring",
              "Capacity Planning",
              "Performance Tuning"
            ],
            "popularity": 79,
            "success_rate": 96
          },
          {
            "id": "data-pipeline-optimization",
            "name": "Data Pipeline Optimization",
            "description": "Analyze and optimize data processing pipelines for performance",
            "category": "Data Processing",
            "difficulty": "advanced",
            "estimated_time": "15-30 minutes",
            "recommended_agents": [
              "data_analyst",
              "performance_optimizer"
            ],
            "steps": [
              "Pipeline Analysis",
              "Bottleneck Identification",
              "Performance Metrics",
              "Optimization Recommendations",
              "Implementation Plan"
            ],
            "use_cases": [
              "ETL Optimization",
              "Real-time Processing",
              "Cost Reduction"
            ],
            "popularity": 72,
            "success_rate": 89
          },
          {
            "id": "security-compliance-audit",
            "name": "Security Compliance Audit",
            "description": "Complete security audit with compliance checking",
            "category": "Security",
            "difficulty": "advanced",
            "estimated_time": "20-45 minutes",
            "recommended_agents": [
              "security_expert"
            ],
            "steps": [
              "Vulnerability Scanning",
              "Compliance Check",
              "Risk Assessment",
              "Remediation Plan",
              "Audit Report"
            ],
            "use_cases": [
              "SOC2 Compliance",
              "GDPR Audit",
              "Security Assessment"
            ],
            "popularity": 68,
            "success_rate": 91
          }
        ],
        "usage_insights": {
          "most_popular_category": "General",
          "most_used_agent": "code_architect",
          "total_workflows": 3
        },
        "personalized_recommendations": [
          {
            "template_id": "ai-code-review",
            "reason": "Based on your frequent use of code analysis workflows",
            "confidence": 0.85
          },
          {
            "template_id": "infrastructure-monitoring",
            "reason": "Recommended for maintaining system health",
            "confidence": 0.72
          }
        ],
        "last_updated": "2025-07-30T13:06:09.601558"
      },
      "duration": 0.1373147964477539,
      "error": null
    },
    "GET /api/documents/processing/pipeline": {
      "method": "GET",
      "url": "http://localhost:8001/api/documents/processing/pipeline",
      "success": true,
      "status_code": 200,
      "response": {
        "pipeline_status": "idle",
        "total_documents": 0,
        "processing_documents": 0,
        "completed_documents": 0,
        "failed_documents": 0,
        "success_rate": 0,
        "avg_processing_time": "2.3s",
        "queue_status": {
          "pending": 0,
          "active_workers": 3,
          "estimated_completion": "N/A"
        },
        "processing_stages": [
          {
            "stage": "Document Upload",
            "status": "active",
            "documents_count": 0,
            "avg_duration": "0.5s",
            "success_rate": 99.8
          },
          {
            "stage": "Text Extraction",
            "status": "active",
            "documents_count": 0,
            "avg_duration": "1.2s",
            "success_rate": 98.5
          },
          {
            "stage": "Chunking",
            "status": "active",
            "documents_count": 0,
            "avg_duration": "0.8s",
            "success_rate": 99.9
          },
          {
            "stage": "Embedding Generation",
            "status": "active",
            "documents_count": 0,
            "avg_duration": "3.1s",
            "success_rate": 97.2
          },
          {
            "stage": "Vector Storage",
            "status": "active",
            "documents_count": 0,
            "avg_duration": "0.3s",
            "success_rate": 99.7
          }
        ],
        "recent_activity": [],
        "last_updated": "2025-07-30T13:06:09.731178"
      },
      "duration": 0.1368403434753418,
      "error": null
    },
    "GET /api/documents/processing/live-status": {
      "method": "GET",
      "url": "http://localhost:8001/api/documents/processing/live-status",
      "success": true,
      "status_code": 200,
      "response": {
        "active_jobs": [],
        "total_active": 0,
        "system_load": 0,
        "timestamp": "2025-07-30T13:06:09.849626"
      },
      "duration": 0.10804963111877441,
      "error": null
    },
    "GET /api/documents/analytics/overview": {
      "method": "GET",
      "url": "http://localhost:8001/api/documents/analytics/overview",
      "success": true,
      "status_code": 200,
      "response": {
        "overview": {
          "total_documents": 0,
          "total_chunks": 0,
          "total_size_mb": 0.0,
          "avg_chunks_per_doc": 0.0,
          "embedding_count": 0,
          "unique_sources": 0
        },
        "document_types": [],
        "status_breakdown": [],
        "upload_trends": [],
        "size_by_type": [],
        "performance_metrics": {
          "processing_success_rate": 0.0,
          "avg_processing_time": "2.3s",
          "total_processing_time": "0.0s",
          "documents_per_hour": 0.0
        },
        "insights": [],
        "last_updated": "2025-07-30T13:06:09.979454"
      },
      "duration": 0.1296520233154297,
      "error": null
    },
    "GET /api/documents/analytics/search-patterns": {
      "method": "GET",
      "url": "http://localhost:8001/api/documents/analytics/search-patterns",
      "success": true,
      "status_code": 200,
      "response": {
        "popular_search_terms": [
          {
            "term": "API",
            "frequency": 45,
            "trend": "up"
          },
          {
            "term": "authentication",
            "frequency": 32,
            "trend": "stable"
          },
          {
            "term": "database",
            "frequency": 28,
            "trend": "up"
          },
          {
            "term": "security",
            "frequency": 25,
            "trend": "up"
          },
          {
            "term": "deployment",
            "frequency": 22,
            "trend": "down"
          },
          {
            "term": "configuration",
            "frequency": 18,
            "trend": "stable"
          },
          {
            "term": "testing",
            "frequency": 15,
            "trend": "up"
          },
          {
            "term": "monitoring",
            "frequency": 12,
            "trend": "stable"
          }
        ],
        "most_accessed_documents": [],
        "search_performance": {
          "avg_response_time": "0.12s",
          "total_searches": 1247,
          "successful_searches": 1189,
          "success_rate": 95.3,
          "avg_results_per_search": 8.4
        },
        "usage_patterns": {
          "peak_hours": [
            "9-11 AM",
            "2-4 PM"
          ],
          "most_active_day": "Tuesday",
          "avg_searches_per_user": 12.3,
          "common_file_types_searched": [
            "PDF",
            "DOCX",
            "MD"
          ]
        },
        "last_updated": "2025-07-30T13:06:10.092006"
      },
      "duration": 0.11330485343933105,
      "error": null
    },
    "POST /api/documents/processing/reprocess-all": {
      "method": "POST",
      "url": "http://localhost:8001/api/documents/processing/reprocess-all",
      "success": true,
      "status_code": 200,
      "response": {
        "message": "Started reprocessing 0 documents",
        "documents_queued": 0,
        "estimated_completion": "0s"
      },
      "duration": 0.09933733940124512,
      "error": null
    },
    "POST /api/system/config": {
      "method": "POST",
      "url": "http://localhost:8001/api/system/config",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "missing",
            "loc": [
              "body",
              "config_key"
            ],
            "msg": "Field required",
            "input": {
              "test": "data",
              "timestamp": "2025-07-30T13:06:10.293624"
            },
            "url": "https://errors.pydantic.dev/2.5/v/missing"
          },
          {
            "type": "missing",
            "loc": [
              "body",
              "config_value"
            ],
            "msg": "Field required",
            "input": {
              "test": "data",
              "timestamp": "2025-07-30T13:06:10.293624"
            },
            "url": "https://errors.pydantic.dev/2.5/v/missing"
          }
        ]
      },
      "duration": 0.10507917404174805,
      "error": null
    },
    "GET /api/system/config": {
      "method": "GET",
      "url": "http://localhost:8001/api/system/config",
      "success": true,
      "status_code": 200,
      "response": [
        {
          "id": 1,
          "config_key": "system.max_agents",
          "config_value": {
            "value": 100
          },
          "description": "Maximum number of agents allowed in the system",
          "is_active": true,
          "created_at": "2025-07-30T10:52:39.623445",
          "updated_at": "2025-07-30T10:52:39.623445",
          "updated_by": null
        },
        {
          "id": 2,
          "config_key": "system.default_timeout",
          "config_value": {
            "value": 300
          },
          "description": "Default timeout for agent operations (seconds)",
          "is_active": true,
          "created_at": "2025-07-30T10:52:39.623445",
          "updated_at": "2025-07-30T10:52:39.623445",
          "updated_by": null
        },
        {
          "id": 3,
          "config_key": "rag.default_model",
          "config_value": {
            "value": "sentence-transformers/all-MiniLM-L6-v2"
          },
          "description": "Default embedding model for RAG system",
          "is_active": true,
          "created_at": "2025-07-30T10:52:39.623445",
          "updated_at": "2025-07-30T10:52:39.623445",
          "updated_by": null
        },
        {
          "id": 4,
          "config_key": "workflow.max_concurrent",
          "config_value": {
            "value": 10
          },
          "description": "Maximum concurrent workflow executions",
          "is_active": true,
          "created_at": "2025-07-30T10:52:39.623445",
          "updated_at": "2025-07-30T10:52:39.623445",
          "updated_by": null
        }
      ],
      "duration": 0.10653877258300781,
      "error": null
    },
    "GET /api/system/config/{config_key}": {
      "method": "GET",
      "url": "http://localhost:8001/api/system/config/{config_key}",
      "success": false,
      "status_code": 404,
      "response": {
        "detail": "Configuration not found"
      },
      "duration": 0.10718154907226562,
      "error": null
    },
    "PUT /api/system/config/{config_key}": {
      "method": "PUT",
      "url": "http://localhost:8001/api/system/config/{config_key}",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "missing",
            "loc": [
              "body",
              "config_key"
            ],
            "msg": "Field required",
            "input": {
              "test": "data",
              "timestamp": "2025-07-30T13:06:10.610916"
            },
            "url": "https://errors.pydantic.dev/2.5/v/missing"
          },
          {
            "type": "missing",
            "loc": [
              "body",
              "config_value"
            ],
            "msg": "Field required",
            "input": {
              "test": "data",
              "timestamp": "2025-07-30T13:06:10.610916"
            },
            "url": "https://errors.pydantic.dev/2.5/v/missing"
          }
        ]
      },
      "duration": 0.09981775283813477,
      "error": null
    },
    "POST /api/system/rag": {
      "method": "POST",
      "url": "http://localhost:8001/api/system/rag",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "missing",
            "loc": [
              "body",
              "name"
            ],
            "msg": "Field required",
            "input": {
              "test": "data",
              "timestamp": "2025-07-30T13:06:10.705284"
            },
            "url": "https://errors.pydantic.dev/2.5/v/missing"
          }
        ]
      },
      "duration": 0.09343385696411133,
      "error": null
    },
    "GET /api/system/rag": {
      "method": "GET",
      "url": "http://localhost:8001/api/system/rag",
      "success": true,
      "status_code": 200,
      "response": [
        {
          "id": 1,
          "name": "default",
          "embedding_model": "sentence-transformers/all-MiniLM-L6-v2",
          "chunk_size": 1000,
          "chunk_overlap": 200,
          "retrieval_strategy": "similarity",
          "top_k": 5,
          "similarity_threshold": 0.7,
          "configuration": {
            "max_tokens": 4000,
            "temperature": 0.7,
            "use_reranking": true
          },
          "is_active": true,
          "created_at": "2025-07-30T10:52:39.623445",
          "updated_at": "2025-07-30T10:52:39.623445",
          "created_by": "system"
        }
      ],
      "duration": 0.1255953311920166,
      "error": null
    },
    "GET /api/system/rag/{config_id}": {
      "method": "GET",
      "url": "http://localhost:8001/api/system/rag/{config_id}",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "config_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "{config_id}",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          }
        ]
      },
      "duration": 0.09767436981201172,
      "error": null
    },
    "POST /api/system/rag/{config_id}/test": {
      "method": "POST",
      "url": "http://localhost:8001/api/system/rag/{config_id}/test",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "config_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "{config_id}",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          },
          {
            "type": "missing",
            "loc": [
              "query",
              "query"
            ],
            "msg": "Field required",
            "input": null,
            "url": "https://errors.pydantic.dev/2.5/v/missing"
          }
        ]
      },
      "duration": 0.09681010246276855,
      "error": null
    },
    "GET /api/system/health": {
      "method": "GET",
      "url": "http://localhost:8001/api/system/health",
      "success": true,
      "status_code": 200,
      "response": {
        "status": "degraded",
        "timestamp": "2025-07-30T13:06:12.131955",
        "services": {
          "database": "unhealthy",
          "api": "healthy",
          "document_processor": "healthy",
          "rag_system": "healthy"
        },
        "metrics": {
          "cpu_usage": "0.3%",
          "memory_usage": "24.1%",
          "memory_available": "5.9GB",
          "disk_usage": "51.7%",
          "disk_free": "23.3GB",
          "uptime": "N/A"
        },
        "version": "1.0.0"
      },
      "duration": 1.0977129936218262,
      "error": null
    },
    "GET /api/system/metrics": {
      "method": "GET",
      "url": "http://localhost:8001/api/system/metrics",
      "success": true,
      "status_code": 200,
      "response": {
        "timestamp": "2025-07-30T13:06:13.242746",
        "cpu": {
          "count": 4,
          "usage_percent": [
            0.0,
            0.0,
            1.0,
            1.0
          ],
          "average_usage": 0.5
        },
        "memory": {
          "total": 8322875392,
          "available": 6315106304,
          "used": 1659424768,
          "percent": 24.1
        },
        "swap": {
          "total": 0,
          "used": 0,
          "percent": 0.0
        },
        "disk": {
          "total": 51835101184,
          "used": 26785357824,
          "free": 25032966144,
          "percent": 51.7,
          "read_bytes": 1327442554880,
          "write_bytes": 247506032640
        },
        "network": {
          "bytes_sent": 125769,
          "bytes_recv": 72385,
          "packets_sent": 426,
          "packets_recv": 491
        }
      },
      "duration": 1.1092779636383057,
      "error": null
    },
    "GET /api/context/stats": {
      "method": "GET",
      "url": "http://localhost:8001/api/context/stats",
      "success": true,
      "status_code": 200,
      "response": {
        "contextQueries": 0,
        "retrievalSuccess": 0.0,
        "avgResponseTime": "0.000s",
        "vectorEmbeddings": 0,
        "systemStatus": "operational",
        "lastQueryTime": null
      },
      "duration": 0.10752367973327637,
      "error": null
    },
    "GET /api/context/performance": {
      "method": "GET",
      "url": "http://localhost:8001/api/context/performance",
      "success": true,
      "status_code": 200,
      "response": [
        {
          "time": "00:00",
          "queries": 0,
          "success_rate": 0.0,
          "avg_latency": 0.0
        },
        {
          "time": "04:00",
          "queries": 0,
          "success_rate": 0.0,
          "avg_latency": 0.0
        },
        {
          "time": "08:00",
          "queries": 0,
          "success_rate": 0.0,
          "avg_latency": 0.0
        },
        {
          "time": "12:00",
          "queries": 0,
          "success_rate": 0.0,
          "avg_latency": 0.0
        },
        {
          "time": "16:00",
          "queries": 0,
          "success_rate": 0.0,
          "avg_latency": 0.0
        },
        {
          "time": "20:00",
          "queries": 0,
          "success_rate": 0.0,
          "avg_latency": 0.0
        }
      ],
      "duration": 0.10093116760253906,
      "error": null
    },
    "GET /api/context/sources": {
      "method": "GET",
      "url": "http://localhost:8001/api/context/sources",
      "success": true,
      "status_code": 200,
      "response": [
        {
          "name": "No Documents",
          "value": 100,
          "color": "#6B7280"
        }
      ],
      "duration": 0.12336277961730957,
      "error": null
    },
    "GET /api/context/queries/recent": {
      "method": "GET",
      "url": "http://localhost:8001/api/context/queries/recent",
      "success": true,
      "status_code": 200,
      "response": [],
      "duration": 0.10002017021179199,
      "error": null
    },
    "GET /api/context/patterns": {
      "method": "GET",
      "url": "http://localhost:8001/api/context/patterns",
      "success": true,
      "status_code": 200,
      "response": [
        {
          "id": "pattern-1",
          "name": "default Pattern",
          "description": "Retrieval pattern using sentence-transformers/all-MiniLM-L6-v2 with similarity strategy",
          "usage": 0,
          "accuracy": 0.0,
          "avgSources": 5,
          "category": "RAG Configuration",
          "status": "active"
        }
      ],
      "duration": 0.11651444435119629,
      "error": null
    },
    "POST /api/context/rag/{config_id}/test": {
      "method": "POST",
      "url": "http://localhost:8001/api/context/rag/{config_id}/test",
      "success": false,
      "status_code": 422,
      "response": {
        "detail": [
          {
            "type": "int_parsing",
            "loc": [
              "path",
              "config_id"
            ],
            "msg": "Input should be a valid integer, unable to parse string as an integer",
            "input": "{config_id}",
            "url": "https://errors.pydantic.dev/2.5/v/int_parsing"
          },
          {
            "type": "missing",
            "loc": [
              "query",
              "query"
            ],
            "msg": "Field required",
            "input": null,
            "url": "https://errors.pydantic.dev/2.5/v/missing"
          }
        ]
      },
      "duration": 0.0898277759552002,
      "error": null
    },
    "GET /api/context/system/health": {
      "method": "GET",
      "url": "http://localhost:8001/api/context/system/health",
      "success": true,
      "status_code": 200,
      "response": {
        "status": "healthy",
        "components": {
          "vector_store": "healthy",
          "embedding_generator": "healthy",
          "context_retriever": "healthy",
          "learning_engine": "healthy"
        },
        "metrics": {
          "total_queries": 0,
          "success_rate": 0.0,
          "avg_response_time": "0.000s",
          "last_query": null
        },
        "timestamp": "2025-07-30T13:06:13.986235"
      },
      "duration": 0.09514355659484863,
      "error": null
    },
    "POST /api/context/initialize": {
      "method": "POST",
      "url": "http://localhost:8001/api/context/initialize",
      "success": true,
      "status_code": 200,
      "response": {
        "status": "success",
        "message": "Context engineering system initialized successfully",
        "timestamp": "2025-07-30T13:06:14.083554"
      },
      "duration": 0.09679436683654785,
      "error": null
    },
    "GET /health": {
      "method": "GET",
      "url": "http://localhost:8001/health",
      "success": true,
      "status_code": 200,
      "response": {
        "status": "healthy",
        "service": "automotas-ai-api"
      },
      "duration": 0.1006166934967041,
      "error": null
    },
    "GET /": {
      "method": "GET",
      "url": "http://localhost:8001/",
      "success": true,
      "status_code": 200,
      "response": {
        "message": "Automotas AI API",
        "version": "1.0.0",
        "docs": "/docs"
      },
      "duration": 0.11693406105041504,
      "error": null
    }
  },
  "missing_endpoints": [
    "POST /api/agents",
    "GET /api/agents",
    "POST /api/workflows",
    "GET /api/workflows",
    "POST /api/admin/documents/upload",
    "GET /api/context/search"
  ],
  "recommendations": [
    {
      "category": "Missing Endpoints",
      "severity": "HIGH",
      "issue": "Expected endpoints not implemented: POST /api/agents, GET /api/agents, POST /api/workflows, GET /api/workflows, POST /api/admin/documents/upload, GET /api/context/search",
      "recommendation": "Implement missing API endpoints according to system design"
    },
    {
      "category": "Failed Tests",
      "severity": "MEDIUM",
      "issue": "24 endpoint tests failed",
      "recommendation": "Review failed endpoint implementations and error handling"
    },
    {
      "category": "Low Success Rate",
      "severity": "HIGH",
      "issue": "Only 47.8% of tests passed",
      "recommendation": "Major API implementation issues need attention"
    }
  ],
  "success_rate": 47.82608695652174
}